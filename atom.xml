<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Luiz Signorelli Dev Blog]]></title>
  <link href="http://luizsignorelli.github.com/atom.xml" rel="self"/>
  <link href="http://luizsignorelli.github.com/"/>
  <updated>2012-04-30T15:38:22-03:00</updated>
  <id>http://luizsignorelli.github.com/</id>
  <author>
    <name><![CDATA[Luiz Fernando Signoelli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Usando uma variável de ambiente para configuração do banco de dados no Rails 3.2]]></title>
    <link href="http://luizsignorelli.github.com/blog/2012/04/25/usando-uma-variavel-de-ambiente-para-configuracao-do-banco-de-dados-no-rails-3-dot-2/"/>
    <updated>2012-04-25T07:25:00-03:00</updated>
    <id>http://luizsignorelli.github.com/blog/2012/04/25/usando-uma-variavel-de-ambiente-para-configuracao-do-banco-de-dados-no-rails-3-dot-2</id>
    <content type="html"><![CDATA[<p>Já faz algum tempo que vi o <a href="http://heroku.com">Heroku</a> utilizar uma variável de ambiente para fazer a configuração de banco de dados da sua aplicação.
Eles utilizam uma variável chamada <code>DATABASE_URL</code>, e o conteúdo dessa variável deve ser uma string de conexão com o banco, por exemplo: <code>postgres://username:password@host:port/database_name</code>.</p>

<p>A partir do Rails 3.2, você consegue configurar sua conexão com o banco dessa maneira também. Suponha que seu <code>database.yml</code> está assim:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">development</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql2</span>
</span><span class='line'>  <span class="l-Scalar-Plain">encoding</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">utf8</span>
</span><span class='line'>  <span class="l-Scalar-Plain">reconnect</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my_db_development</span>
</span><span class='line'>  <span class="l-Scalar-Plain">pool</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>  <span class="l-Scalar-Plain">username</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>  <span class="l-Scalar-Plain">password</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root_password</span>
</span><span class='line'>  <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">localhost</span>
</span></code></pre></td></tr></table></div></figure>


<p>Se você definir a variável de ambiente <code>DATABASE_URL</code> com uma string de conexão válida, o rails vai ignorar o arquivo <code>database.yml</code> e usar a string de conexão definida na variável. Para o exemplo acima, a string equivalente seria: <code>mysql2://root:root_password@localhost:3306/my_db_development</code>.</p>

<p>O principal benefício dessa abordagem é isolar a configuração do banco, assim cada desenvolvedor define a variável <code>DATABASE_URL</code> como preferir. Outra maneira de se atingir isso é ignorar o arquivo <code>database.yml</code> do seu repositório git, assim cada desenvolvedor deve criar o seu com suas configurações locais.</p>

<h2>Como descobri isso da pior maneira possível)</h2>

<p>Há alguns meses eu estava desenvolvendo uma aplicação <strong>Java</strong> usando o <a href="http://www.playframework.org/">Play! Framwork</a> e como o <strong>Play</strong> suporta esse tipo de configuração usando variáveis de ambiente, a equipe resolveu usar para a cofiguração de banco de dados.</p>

<p> A nossa variável também se chamva <code>DATABASE_URL</code>, pois tinhamos visto essa configuração no Heroku e acabamos usando o mesmo nome. Como estavamos usando <code>mysql</code>, a nossa string era mais ou menos assim: <code>mysql://root@localhost:3306/my_database</code>.</p>

<p>Para não precisar ficar definindo essa variável toda hora, adicionei o comando para exportar no meu arquivo <code>.bash_profile</code>. O projeto acabou, mas eu esqueci de remover essa linha do meu <code>.bash_profile</code>, logo a variável ainda estava sendo definida.</p>

<p>Meses depois, o <strong>Rails 3.2</strong> é lançado, e fui criar uma aplicação usando essa nova versão. Toda vez que eu tentava usar a aplicação rails, no console ou subindo o servidor, o seguinte erro era lançado:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">Please install the mysql adapter</span><span class="p-Indicator">:</span> <span class="err">`</span><span class="l-Scalar-Plain">gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.) (LoadError)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Detalhe: minha aplicação rails não usava <code>mysql</code> e sim <code>sqlite3</code>, e mesmo assim ele me dava esse erro pedindo o <code>activerecord-mysql-adapter</code>.</p>

<p>Depois de pesquisar na iternet e tentar resolver o problema, sem sucesso, por uma semana, resolvi debugar o rails para ver o que e diabos ele estava tentando fazer. Foi aí que descobri essa nova <em>feature</em>. O rails estava pegando a configuração do meu projeto <strong>Play</strong>, e por isso o erro. Foi só remover a variavel de ambiente que tudo voltou a funcionar normalmente.</p>

<p>A única menção que encontrei dessa nova <em>feature</em> do rails foi no último parágrafo
<a href="http://rubypond.com/blog/activerecord-url-connections">desse</a> blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog com Octopress e GitHub Pages]]></title>
    <link href="http://luizsignorelli.github.com/blog/2012/03/28/blog-com-octopress-e-github-pages/"/>
    <updated>2012-03-28T10:07:00-03:00</updated>
    <id>http://luizsignorelli.github.com/blog/2012/03/28/blog-com-octopress-e-github-pages</id>
    <content type="html"><![CDATA[<p>Esse é meu novo blog sobre desenvolvimento de software. A idéia é falar coisas que uso dia-a-dia e de projetos pessoais que estou desenvolvendo.</p>

<p>Nesse primeiro post gostaria de compartilhar as ferramentas que estou utilizando para servir e hospedar o blog: <a href="http://pages.github.com">GitHub Pages</a> e <a href="http://octopress.org/">Octopress</a>.</p>

<h2>Github Pages</h2>

<p>GitHub Pages é um serviço que o GitHub oferece aos seus usuários, onde é possível hospedar sua página/blog pessoal, e também páginas para seus projetos do GitHub, usando apenas Git. Para isso o GitHub utiliza o <a href="http://jekyllrb.com/">Jekyll</a>, um gerador de sites e blogs estático, escrito por um de seus fundadores.</p>

<p>Funciona mais ou menos assim:</p>

<ol>
<li>Você cria suas páginas e posts usando a linguagem de marcação <a href="http://daringfireball.net/projects/markdown/">Markdown</a>, que é a mesma utilizada no Wiki do GiHub;</li>
<li>O <strong>Jekyll</strong> lê esses arquivos e os transforma em HTML já na estrutura correta para o GitHub Pages;</li>
<li>Você faz <code>push</code> para seu repositório no GitHub, e em alguns minutos seu site está no ar.</li>
</ol>


<p>O único problema do <strong>Jekyll</strong> é que ele vem bem cru, cabendo a você fazer todo o layout e design das páginas. É aí que entra o <strong>Octopress</strong>.</p>

<h2>Octopress</h2>

<p>O <strong>Octopress</strong> é um <em>framework</em> em cima do <strong>Jekyll</strong> que trás uma série de facilidadas e recursos pré-configurados, você só tem o trabalho de escrever o conteúdo.</p>

<p>Alguns recursos do octopress:</p>

<ul>
<li>Layout HTML 5 sermântico</li>
<li>Layout responsivo para mobile</li>
<li>Integração com Twitter, Google Plus One, Disqus, Pinboard, Delicious, e Google Analytics</li>
<li>Deploy com Github pages ou Rsync</li>
<li>Suporte a servidores Rack e <a href="http://pow.cx">POW</a>, para preview local</li>
<li>Temas com Compass e Sass</li>
<li>Syntax highlighting com <a href="http://ethanschoonover.com/solarized">Solarized</a></li>
</ul>


<h3>Setup</h3>

<p>O <strong>Octopress</strong> tem duas ependências: <em>git</em> e <em>Ruby 1.9.2</em>. O <em>git</em> você já deve ter instalado, caso contrário basta usar o gerenciador de pacotes do seu sistema operacional. Para Mac eu sugiro usar o <a href="http://mxcl.github.com/homebrew">Homebrew</a>.</p>

<p>Para instalar o <em>Ruby 1.9.2</em>, a melhor opção é usar um gerenciador de versões como o <a href="https://rvm.beginrescueend.com/">RVM</a> ou <a href="https://github.com/sstephenson/rbenv">rbenv</a>.</p>

<p>Para conferir se as dependências estão instaladas faça:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git --version # deve ser 1.7.x
</span><span class='line'>ruby -v       # deve ser 1.9.2</span></code></pre></td></tr></table></div></figure>


<p>Se tudo estiver funcionando, o próximo passo é clonar o repositório do <strong>Octopress</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress    # Se você usa o RVM será perguntado se confia no script .rvmrc, responda sim (y)</span></code></pre></td></tr></table></div></figure>


<p>O <strong>Octopress</strong> depende de algumas <em>Ruby gems</em>, para instalar essas dependências faça:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash    # Só se você usa rbenv
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>Agora gere o layout inicial com o tema <em>default</em>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>Preview local</h3>

<p>Para ver uma prévia do seu blog antes de fazer o <em>deploy</em> no Github faça:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate   # Gera os arquivos estátivos do blog 
</span><span class='line'>rake preview    # Inicia o servidor e observa qualquer alteração nos fontes</span></code></pre></td></tr></table></div></figure>


<p>Acessando no seu browser <code>http://localhost:4000</code>, você deve ver seu blog vazio.</p>

<h3>Deploy com Github Pages</h3>

<p>Para você hospedar seu blog no <strong>Github Pages</strong> o primeiro passo é criar um repositório no Github chamdo <code>&lt;seu_usuario_github&gt;.github.com</code>, no meu caso <code>luizsignorelli.github.com</code>.</p>

<p>O <strong>Github Pages</strong> usa a branch <em>master</em> do seu repositório para servir o contúdo estático do seu blog, por isso o <strong>Octopress</strong> cria uma branch <em>source</em> que é onde o fonte do seu blog (os arquivos Markdown) dexando a branch <em>master</em> só com o HTML gerado a partir do fonte.</p>

<p>Existe uma rake task para fazer tudo isso:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>Ela vai:</p>

<ol>
<li>Perguntar a url do seu repositório <strong>Github Pages</strong></li>
<li>Renomear a fonte remota que aponta para o repositório git do octopress de <em>origin</em> para <em>octopress</em></li>
<li>Adicionar seu repositório <strong>Github Pages</strong> como a fonte remota <em>origin</em></li>
<li>Mudar para a branch local <em>source</em></li>
<li>Configurar a url do seu blog de acordo com o seu repositório</li>
<li>Configrar a branch <em>master</em> no diretório <code>_deploy</code></li>
</ol>


<p>Para gerar o blog:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>Os arquivos gerados serão copiados para o diretório <code>_deploy</code>. Eles serão adicionados no git e evniados para seu repositório remoto na branch <em>master</em>. Assim que seu site estiver pronto o Github irá te enviar um email avisando, basta acessar <code>http://&lt;seu_usuario_github&gt;.github.com</code>.</p>

<p>Não se esqueça de sempre commitar os fontes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'commit message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>É isso. Para mais informações sobre o <strong>Octopress</strong>, como configurar se blog e como escrever posts acesse <a href="http://octopress.org/">http://octopress.org/</a>.</p>
]]></content>
  </entry>
  
</feed>
